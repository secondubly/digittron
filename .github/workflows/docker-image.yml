name: Docker Image CI

on:
    push:
        branches: ['main']

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build:
        runs-on: self-hosted
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Create .env file
              uses: SpicyPizza/create-envfile@v2.0
              with:
                envkey_CLIENT_ID: ${{ vars.CLIENT_ID }}
                envkey_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
                envkey_BOT_ID: ${{ vars.BOT_ID }}
                envkey_BOT_ACCESS_TOKEN: ${{ secrets.BOT_ACCESS_TOKEN }}
                envkey_BOT_REFRESH_TOKEN: ${{ secrets.BOT_REFRESH_TOKEN }}
                envkey_TWITCH_ID: ${{ vars.TWITCH_ID }}
                envkey_TWITCH_ACCESS_TOKEN: ${{ secrets.TWITCH_ACCESS_TOKEN }}
                envkey_TWITCH_REFRESH_TOKEN: ${{ secrets.TWITCH_REFRESH_TOKEN }}
                envkey_REDIS_HOST: "redis"
                envkey_REDIS_PORT: "6379"

            - name: Verify .env file
              run: type .env

            - name: Build image
              run: docker compose build

            - name: Log in to the Container registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.G_TOKEN }}

            - name: Push image to Github Container Registry
              run: docker compose push

            # - name: Extract metadata (tags, labels) for Docker
            #   id: meta
            #   uses: docker/metadata-action@v5
            #   with:
            #       images: ghcr.io/${{ github.repository }}
            #       tags: |
            #           type=semver,pattern={{version}} # Tag with release version
            #           type=raw,value=latest,enable=${{ github.event_name == 'release' && github.event.action == 'published' }}

            # - name: Generate artifact attestation
            #   uses: actions/attest-build-provenance@v3
            #   with:
            #       subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
            #       subject-digest: ${{ steps.push.outputs.digest }}
            #       push-to-registry: true
